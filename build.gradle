plugins {
    id 'fabric-loom' version '0.2.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

group = "com.github.NerdHubMC"
archivesBaseName = "TextileLib"
version = "${mod_version}"

minecraft {
}

processResources {
    // this will ensure that this task is redone when there's a change
    inputs.property "version", project.version

    // replace stuff in fabric.mod.json, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'fabric.mod.json'

        // add mod metadata
        expand 'version': project.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'fabric.mod.json'
    }

    //ATs
    rename '(.+_at.cfg)', 'META-INF/$1'
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}"
    modCompile "net.fabricmc:fabric-loader:${loader_version}"

    modCompile "net.fabricmc:fabric:${fabric_version}"
    compileOnly "com.google.code.findbugs:jsr305:${findbugs_version}"
}

compileJava {
    options.encoding = 'UTF-8'
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

jar {
    from "LICENSE.md"
    manifest.mainAttributes(
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}".toLowerCase(Locale.ROOT),
            "Built-On-Minecraft": "${mc_version}",
            "Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
    )
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    from "LICENSE.md"
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact javadocJar
            artifact sourcesJar
            pom {
                name = "TextileLib"
                url = "https://github.com/NerdHubMC/TextileLib"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/NerdHubMC/TextileLib/blob/master/LICENSE.md"
                    }
                }
                scm {
                    url = "https://github.com/NerdHubMC/TextileLib"
                    connection = "scm:git:git://github.com/NerdHubMC/TextileLib.git"
                    developerConnection = "scm:git:git@github.com:NerdHubMC/TextileLib.git"
                }
                issueManagement {
                    system = "github"
                    url = "https://github.com/NerdHubMC/TextileLib/issues"
                }
            }
        }
    }

    repositories {
        //mavenLocal() //uncomment htis to publis hto the local maven

        //publish to the nerdhub maven if credentials are set
        if (project.hasProperty("nerdhub_maven_user")) {
            maven {
                name = "NerdHub"
                url = findProperty("nerdhub_maven_url")
                credentials {
                    username = findProperty("nerdhub_maven_user")
                    password = findProperty("nerdhub_maven_pass")
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}